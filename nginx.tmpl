{% macro upstream(name, nodes) -%}
upstream {{ name }} {
{% for node in nodes %}
    server {{ node.addr }}:{{ node.port }} weight={{ node.weight }};
{% endfor %}
}
{%- endmacro %}

{% set ssl_default_crt = '/etc/nginx/enabled-certs/default.crt' %}
{% set ssl_default_key = '/etc/nginx/enabled-certs/default.key' %}
{% for proxy_detail in proxy_details %}
{% set ssl_crt = '/etc/nginx/enabled-certs/%s.crt'|format(proxy_detail.name) %}
{% set ssl_key = '/etc/nginx/enabled-certs/%s.key'|format(proxy_detail.name) %}

{% for proxy_group in proxy_detail.nodes|groupby('proto') %}
{% if proxy_group.grouper == 'http' %}
{% set proxy_conf = '/etc/nginx/enabled-sites/http.%s.conf'|format(proxy_detail.name) %}
{{ upstream('http.%s'|format(proxy_detail.name), proxy_group.list) }}
server {
    server_name {{ proxy_detail.name }};
    listen 80;
    {% if proxy_conf|exists %}
    include {{ proxy_conf }};
    {% endif %}
    location / {
        proxy_pass http://{{ 'http.%s'|format(proxy_detail.name) }};

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forward-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}
{% elif proxy_group.grouper == 'https' and (ssl_crt|exists) and (ssl_key|exists) %}
{% set proxy_conf = '/etc/nginx/enabled-sites/https.%s.conf'|format(proxy_detail.name) %}
{{ upstream('https.%s'|format(proxy_detail.name), proxy_group.list) }}
server {
    server_name {{ proxy_detail.name }};
    listen 443 ssl;

    ssl_certificate {{ ssl_crt }};
    ssl_certificate_key {{ ssl_key }};

    ssl_dhparam /etc/nginx/nginx.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA";

    ssl_stapling on;
    ssl_prefer_server_ciphers on;

    {% if proxy_conf|exists %}
    include {{ proxy_conf }};
    {% endif %}
    location / {
        proxy_pass http://{{ 'https.%s'|format(proxy_detail.name) }};

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forward-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}
{% elif  proxy_group.grouper == 'https' and (ssl_default_crt|exists) and (ssl_default_key|exists) %}
{% set proxy_conf = '/etc/nginx/enabled-sites/https.%s.conf'|format(proxy_detail.name) %}
{{ upstream('https.%s'|format(proxy_detail.name), proxy_group.list) }}
server {
    server_name {{ proxy_detail.name }};
    listen 443 ssl;

    ssl_certificate {{ ssl_default_crt }};
    ssl_certificate_key {{ ssl_default_key }};

    ssl_dhparam /etc/nginx/nginx.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA";

    ssl_stapling on;
    ssl_prefer_server_ciphers on;

    {% if proxy_conf|exists %}
    include {{ proxy_conf }};
    {% endif %}
    location / {
        proxy_pass http://{{ 'https.%s'|format(proxy_detail.name) }};

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forward-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}
{% endif %}
{% endfor %}
{% endfor %}
# This is just an invalid value which will never trigger on a real hostname.
server {
    listen 80 default_server;
    server_name _;

    include /etc/nginx/nginx.errors.conf;

    location / {
        return 503;
    }
}

{% if (ssl_default_crt|exists) and (ssl_default_key|exists) %}
server {
    listen 443 ssl default_server;
    server_name _;

    ssl_certificate {{ ssl_default_crt }};
    ssl_certificate_key {{ ssl_default_key }};

    ssl_dhparam /etc/nginx/nginx.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA";

    ssl_stapling on;
    ssl_prefer_server_ciphers on;

    include /etc/nginx/nginx.errors.conf;

    location / {
        return 503;
    }
}
{% endif %}



